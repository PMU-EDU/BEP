@model IEnumerable<BES.Areas.Procurement.Models.Activity>

@{
    ViewData["Title"] = "Index";
}

<div style="margin:10px 10px 0 10px">
    <div class="row">
        <div class="col-sm-8 col-md-8 col-lg-8">
            <h3 style="color:darkslategrey">Procurement Plan Summary - @ViewBag.PPName</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-4 col-md-4 col-sm-4">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <span class="label label-primary pull-right" style="font-size:14px">@String.Format("{0:#,##}", int.Parse(ViewBag.TotalGAECost))</span>
                    <h3 class="box-title">Planned Cost</h3>
                    <h2 class="no-margins font-bold">
                        @{ string s = ViewBag.TotalGAACost;}
                        @(String.Format("{0:#,##}", int.Parse(s)).PadLeft(2, '0'))
                    </h2>
                    <small>Commit Cost</small>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-4">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <span class="label label-primary pull-right" style="font-size:14px">@String.Format("{0:#,##}", int.Parse(ViewBag.TotalGAACost))</span>
                    <h3 class="box-title">Commit Cost</h3>
                    <h2 class="no-margins font-bold">
                        @{ s = ViewBag.TotalGACommit;}
                        @(String.Format("{0:#,##}", int.Parse(s)).PadLeft(2, '0')) @*Change test*@
                    </h2>
                    <small>Payment Released</small>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-4">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <span class="label label-primary pull-right" style="font-size:14px">@String.Format("{0:#,##}", int.Parse(ViewBag.TotalGAECost))</span>
                    <h3 class="box-title">Actual Cost</h3>
                    <h2 class="no-margins font-bold">
                        @{string Balance = ((int.Parse(ViewBag.TotalGAECost)) - ((int.Parse(ViewBag.TotalGACommit)))).ToString();}
                        <text>@String.Format("{0:#,##}", int.Parse(Balance))</text>
                    </h2>
                    <small>Balance</small>
                </div>
            </div>
        </div>

    </div>
    @*<div class="row" style="padding:10px 0 10px 0">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
            </div>
        </div>*@
    @*<div class="row" style="padding:10px 0 10px 0">
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div id="container1" style="min-width: 300px; height: 300px; max-width: 500px; margin: 0 auto"></div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6" ">
                <div id="container2" style="min-width: 300px; height: 300px; max-width: 500px; margin: 0 auto"></div>
            </div>
        </div>*@
    <div class="row">
        <div class="col-lg-3 col-md-3 col-sm-3">
            <div class="box box-primary">
                <div class="box-header with-border">
                    @{string total = ViewBag.TotalGActivities; total = total.PadLeft(2, '0');}
                    <span class="label label-primary pull-right" style="font-size:14px">@total</span>
                    <h3 class="box-title">Activities</h3>
                    <h2>
                        @{string complete = ViewBag.TotalGActivitiesCompleted; complete = complete.PadLeft(2, '0');}
                        <a href="#" style="color:#00a65a !important" class="search" data-url='/Procurement/Activities/Popup/3' data-toggle="modal" data-target="#exampleModalLong1">@complete</a>
                    </h2>
                    <small>Completed @*- <text style="font-size:13px;font-weight:bold">12%</text>*@</small>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-3">
            <div class="box box-primary">
                <div class="box-header with-border">
                    @{string Cancelled = ViewBag.TotalGActivitiesCancelled; Cancelled = Cancelled.PadLeft(2, '0');}
                    <span class="label label-primary pull-right" style="font-size:14px">@total</span>
                    <h3 class="box-title">Activities</h3>
                    <h2 class="no-margins font-bold">
                        @{ s = ViewBag.TotalGActivitiesProcess; s = s.PadLeft(2, '0');}
                        <a href="#" class="search" data-url='/Procurement/Activities/Popup/4' style="color:red" data-toggle="modal" data-target="#exampleModalLong1">@Cancelled</a> @*of @subtotal*@
                    </h2>
                    <small>Cancelled</small>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-3">
            <div class="box box-primary">
                <div class="box-header with-border">
                    @{string subtotal = ((int.Parse(total)) - (int.Parse(complete)) - (int.Parse(Cancelled))).ToString(); subtotal = subtotal.PadLeft(2, '0');}
                    <span class="label label-primary pull-right" style="font-size:14px">@subtotal</span>
                    <h3 class="box-title">Activities</h3>
                    <h2 class="no-margins font-bold">
                        <a href="#" style="color:#00c0ef !important" class="search" data-url='/Procurement/Activities/Popup/2' data-toggle="modal" data-target="#exampleModalLong1">@s</a> @*of @subtotal*@
                    </h2>
                    <small>In-Process</small>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-3">
            <div class="box box-primary">
                <div class="box-header with-border">
                    @{ total = ViewBag.TotalGActivities; total = total.PadLeft(2, '0');}
                    <span class="label label-primary pull-right" style="font-size:14px">@subtotal</span>
                    <h3 class="box-title">Activities</h3>
                    <h2 class="no-margins font-bold">
                        @{string remain = ViewBag.TotalGActivitiesRemain; remain = remain.PadLeft(2, '0');}
                        <a href="#" style="color:#d2d6de" class="search" data-url='/Procurement/Activities/Popup/1' data-toggle="modal" data-target="#exampleModalLong1">@remain</a>
                    </h2>
                    <small>Not Initiated</small>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <!-- Bar chart -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <i class="fa fa-bar-chart-o"></i>
                    <h3 class="box-title">Goods Activities vs Steps</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="bar-chart" style="height: 300px;"></div>
                </div>
                <!-- /.box-body-->
            </div>
            <!-- /.box -->
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <!-- Donut chart -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <i class="fa fa-bar-chart-o"></i>
                    <h3 class="box-title">Donut Chart</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="donut-chart" style="height: 300px;"></div>
                </div>
                <!-- /.box-body-->
            </div>
            <!-- /.box -->
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-header">List of  @Model.Select(a => a.PProcurementPlan.Name).FirstOrDefault() Activities @Html.ActionLink("Create New Activity", "Create", new { id = ViewBag.PPID }, new { @class = "btn btn-primary btn-xs" })</h3>
                </div>
                <div>

                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    <text>Activity#</text>
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                @*<th>
                                        @Html.DisplayNameFor(model => model.EstimatedCost)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ActualCost)
                                    </th>*@
                                @*<th>
                                        @Html.DisplayNameFor(model => model.Method.Name)
                                    </th>*@
                                <th>
                                    <text>Estimated</text>
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ReviewType)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>

                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr>

                                    @*<td>
                                            @Html.DisplayFor(modelItem => item.PProcurementPlan.Name)
                                        </td>*@
                                    <td style="color:#3c8dbc;font-weight:bold">
                                        A#-@Html.DisplayFor(modelItem => item.ActivityNo)
                                    </td>
                                    <td style="color:#3c8dbc;font-weight:bold">
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    @*<td>
                                            <text>@String.Format("{0:#,##}", item.EstimatedCost)</text>
                                        </td>
                                        <td>
                                            @{
                                                if (item.ActualCost != 0)
                                                {
                                                    <text>@String.Format("{0:#,##}", item.ActualCost)</text>
                                                }else
                                                {
                                                    <text>Nil</text>
                                                }
                                            }

                                                                </td>*@
                                    @*<td>
                                            @Html.DisplayFor(modelItem => item.Method.Name)
                                        </td>*@
                                    <td>
                                        @String.Format("{0:#,##}", item.EstimatedCost)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReviewType)
                                    </td>

                                    @{
                                        if (item.Status == 1)
                                        {
                                            <td><text class="label label-default" style="font-weight:bold">Not Initiated</text></td> }
                                        else if (item.Status == 2)
                                        {
                                            <td><text class="label label-info" style="font-weight:bold"> In Process </text></td> }
                                        else if (item.Status == 3)
                                        {
                                            <td><text class="label label-success" style="font-weight:bold"> Completed </text></td> }
                                        else
                                        {
                                            <td><text class="label label-danger" style="font-weight:bold"> Cancelled </text></td> }
                                    }
                                    <td>
                                        @Html.ActionLink("Steps", "Edit", new { id = item.ActivityID }, new { @class = "btn btn-primary btn-sm" })
                                    </td>
                                    <td>@Html.ActionLink("View", "Details", new { id = item.ActivityID }, new { @class = "btn btn-primary btn-sm" })</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>

    <!-- Modal1 -->
    <div class="modal fade" id="exampleModalLong1" tabindex="-1" role="dialog" aria-hidden="true" style="z-index: 1400">
        <div class="modal-dialog" role="document" style="width:800px;min-height:600px">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="partial">Loading....</div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    @*<button type="button" class="btn btn-primary">Save changes</button>*@
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    <!-- DataTables -->

}
<div id="dynamicContentContainer"></div>
@section Scripts {

    <!-- FLOT CHARTS -->
    <script src="~/libs/flot/jquery.flot.min.js"></script>
    <!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
    <script src="~/libs/flot/jquery.flot.resize.min.js"></script>
    <!-- FLOT PIE PLUGIN - also used to draw donut charts -->
    <script src="~/libs/flot/jquery.flot.pie.min.js"></script>
    <!-- FLOT CATEGORIES PLUGIN - Used to draw bar charts -->
    <script src="~/libs/flot/jquery.flot.categories.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            $(function () {
                $('.search').click(function () {
                    var url = $(this).data('url');
                    var route = url;
                    $('#partial').load(route);
                });
            });
        });
    </script>
    <!-- Page script -->
    <script>
        $(function () {

            /*
             * BAR CHART
             * ---------
             */
           var data=[];
            var array1 = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.ActivitySequence))');
            var array2 = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.finalList))');
            for (var c = 0; c < 8; c++){
                data.push(['A#-' + array1[c],array2[c]]);
                }

            var bar_data = {

                data: data,
                color: '#3c8dbc'
            }
            $.plot('#bar-chart', [bar_data], {
                grid: {
                    borderWidth: 1,
                    borderColor: '#f3f3f3',
                    tickColor: '#f3f3f3'
                },
                series: {
                    bars: {
                        show: true,
                        barWidth: 0.5,
                        align: 'center'
                    }
                },
                xaxis: {
                    mode: 'categories',
                    tickLength: 0,
                    maxvalue: 9,
                    stepsize: 1
                },
                yaxis: {                    
                    tickLength: 0,
                    maxvalue: 9,
                    stepsize: 1
                }
            })
            /* END BAR CHART */
            /*
     * DONUT CHART
     * -----------
     */

            var donutData = [
                { label: 'Series2', data: 30, color: '#3c8dbc' },
                { label: 'Series3', data: 20, color: '#0073b7' },
                { label: 'Series4', data: 50, color: '#00c0ef' }
            ]
            $.plot('#donut-chart', donutData, {
                series: {
                    pie: {
                        show: true,
                        radius: 1,
                        innerRadius: 0.5,
                        label: {
                            show: true,
                            radius: 2 / 3,
                            formatter: labelFormatter,
                            threshold: 0.1
                        }

                    }
                },
                legend: {
                    show: false
                }
            })
    /*
         * END DONUT CHART
         */
            /*
   * Custom Label formatter
   * ----------------------
   */
            function labelFormatter(label, series) {
                return '<div style="font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;">'
                    + label
                    + '<br>'
                    + Math.round(series.percent) + '%</div>'
            }
        })

    </script>



}
