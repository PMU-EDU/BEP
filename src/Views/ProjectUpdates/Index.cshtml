@model IEnumerable<BES.Models.Data.BaselineGeneral>

@{
    ViewData["Title"] = "Index";
}
@*<div class="box-header with-border">*@
<h2>Uploaded Evidences & Progress Summary</h2>

<!-- /.box-header -->
<div class="box-body">
    <div class="row">
        <div class="col-xs-6 col-md-3 text-center">
            <input type="text" class="knob" value="30" data-skin="tron" data-thickness="0.2" data-width="120" data-height="120" data-fgColor="#3c8dbc" data-readonly="true">

            <div class="knob-label">Education Section Progress</div>
        </div>
        <!-- ./col -->
        <div class="col-xs-6 col-md-3 text-center">
            <input type="text" class="knob" value="10" data-skin="tron" data-thickness="0.2" data-width="120" data-height="120" data-fgColor="#f56954" data-readonly="true">

            <div class="knob-label">Development Section Progress</div>
        </div>
        <!-- ./col -->
        <div class="col-xs-6 col-md-3 text-center">
            <input type="text" class="knob" value="10" data-skin="tron" data-thickness="0.2" data-width="120" data-height="120" data-fgColor="#00a65a" data-readonly="true">

            <div class="knob-label">Procurement Section Progress</div>
        </div>
        <!-- ./col -->
        <div class="col-xs-6 col-md-3 text-center">
            <input type="text" class="knob" value="0" data-skin="tron" data-thickness="0.2"  data-width="120" data-height="120" data-fgColor="#00c0ef"  data-readonly="true">

            <div class="knob-label">M&E Section Progress</div>
        </div>
        <!-- ./col -->
    </div>
    <!-- /.row -->
</div>

@*</div>*@
<p>
    @*<a asp-action="Create">Create New</a>*@
</p>

<section class="content">

    <div class="box box-default">
        <div class="box-header with-border">
            <form id="myform" autocomplete="off">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">Region</label>
                            <select id="RegionID" class="form-control" asp-items="ViewBag.RegionID" tabindex="1"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">District</label>
                            <select id="DistrictID" class="form-control" asp-items="@(new SelectList(string.Empty,"DistrictID","DistrictName"))" tabindex="2"></select>
                        </div>
                    </div>
                </div>
            </form>
            <div class="box-tools pull-right">
                @* @Html.ActionLink("Detail View of Raw Data", "RawData", null, new { @class = "btn btn-primary btn-xs", target = "_blank" })*@
                @*<a href="/BaselineGenerals/RawData/" class="btn btn-success search" type="button" target="_blank">Detail View of Raw Data</a> @*of @subtotal*@
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div id="dynamicContentContainer"></div>
            </div>
        </div>
    </div>
    <div id="dynamicContentContainer"></div>
</section>
@section Scripts {
    <!-- jQuery Knob -->
    <script src="~/libs/jquery-knob/jquery.knob.min.js"></script>
    <!-- Sparkline -->
    <script src="~/libs/jquery-sparklines/jquery.sparkline.min.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">

          $.get('@Url.Action("FilterView",new { id = 0 })', function (content) {
            $("#dynamicContentContainer").html(content);
            $("#divLoading").hide();
        });
        // on Region ID
        $('#RegionID').change(function () {

            var url = '@Url.Content("~/baselinegenerals")' + "/GetDistrict";
            var ddlsource = "#RegionID";
            $.getJSON(url, { RegionID: $(ddlsource).val() }, function (data) {
                var items = '';

                $("#DistrictID").empty();
                $.each(data, function (i, designation) {
                items += "<option value='" + designation.value + "'>" + designation.text + "</option>";
                });
                $("#DistrictID").html(items);
            });
            //FilterView Code
            var RID = $(this).val();
            //alert(RegionID);
            $("#divLoading").show();
            $.get('@Url.Action("FilterView")', { RID: RID}, function(content){
                $("#dynamicContentContainer").html(content);
                $("#divLoading").hide();
            });
        });
          $('#DistrictID').change(function () {
            var DID = $(this).val();
            $("#divLoading").show();
            $.get('@Url.Action("FilterView")', { DID: DID}, function(content){
                $("#dynamicContentContainer").html(content);
                $("#divLoading").hide();
            });
        });

        /////// Top percentages 
        $(function () {
            $(".knob").knob({
                /*change : function (value) {
                 //console.log("change : " + value);
                 },
                 release : function (value) {
                 console.log("release : " + value);
                 },
                 cancel : function () {
                 console.log("cancel : " + this.value);
                 },*/
                draw: function () {

                    // "tron" case
                    if (this.$.data('skin') == 'tron') {

                        var a = this.angle(this.cv)  // Angle
                            , sa = this.startAngle          // Previous start angle
                            , sat = this.startAngle         // Start angle
                            , ea                            // Previous end angle
                            , eat = sat + a                 // End angle
                            , r = true;

                        this.g.lineWidth = this.lineWidth;

                        this.o.cursor
                            && (sat = eat - 0.3)
                            && (eat = eat + 0.3);

                        if (this.o.displayPrevious) {
                            ea = this.startAngle + this.angle(this.value);
                            this.o.cursor
                                && (sa = ea - 0.3)
                                && (ea = ea + 0.3);
                            this.g.beginPath();
                            this.g.strokeStyle = this.previousColor;
                            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false);
                            this.g.stroke();
                        }

                        this.g.beginPath();
                        this.g.strokeStyle = r ? this.o.fgColor : this.fgColor;
                        this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false);
                        this.g.stroke();

                        this.g.lineWidth = 2;
                        this.g.beginPath();
                        this.g.strokeStyle = this.o.fgColor;
                        this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
                        this.g.stroke();

                        return false;
                    }
                }
            });
        });
    </script>
}
