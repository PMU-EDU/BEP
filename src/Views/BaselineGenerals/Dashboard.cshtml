@*@model IEnumerable<MISReports.Areas.EU.Models.Reports.BLEUDetailView>*@
@model BES.Models.Reports.BLDashboardView

@{
    ViewBag.Title = "Dashboard";
    var GirlsPrPercent = Model.blV.Sum(a => a.TotalPresenceGrils) * 100 / Model.blV.Sum(a => a.TotalEnrollGirls);
    var GirlsHCPercent = Model.blV.Sum(a => a.TotalHeadcountGirls) * 100 / Model.blV.Sum(a => a.TotalEnrollGirls);

    var BoysPrPercent = Model.blV.Sum(a => a.TotalPresenceBoys) * 100 / Model.blV.Sum(a => a.TotalEnrollBoys);
    var BoysHCPercent = Model.blV.Sum(a => a.TotalHeadcountBoys) * 100 / Model.blV.Sum(a => a.TotalEnrollBoys);

    var OverAllPerSch = Model.blV.Sum(a => a.TotalEnrollment) / Model.blV.Count(a => a.BLGeneralID > 0);
    var GirlsPerSch = Model.blV.Sum(a => a.TotalEnrollGirls) / Model.blV.Count(a => a.BLGeneralID > 0);
    var BoysPerSch = Model.blV.Sum(a => a.TotalEnrollBoys) / Model.blV.Count(a => a.BLGeneralID > 0);
    var filterList = new SelectList(new[]
                {
new { Id = "0", Name = "Over all" },
new { Id = "1", Name = "Potential" },
new { Id = "2", Name = "Feeder" },
new { Id = "3", Name = "Next Level" },
}, "Id", "Name");
}

<div class="box-header with-border">
    <div class="col-lg-12">
        <div class="col-md-10 ">
            <h3>Baseline Analysis Summary <small>of Schools Focused in Balochistan Education Support</small></h3>
        </div>
        @*@Html.ActionLink("Prinmary ", "SchoolList", "Main", new { a = "1", l = "1", i = "1", r = "1" }, new { @class = "modal-link" })
            @Html.ActionLink("Middle ", "SchoolList", "Main", new { a = "1", l = "2", i = "1", r = "1" }, new { @class = "modal-link" })*@
        <table>
            <tr>
                <td><strong>Filter</strong></td>
                <td>
                    @using (Html.BeginForm())
                    {
                        <div id="" , class="col-md-3">
                            @Html.DropDownListFor(model => model.filter, filterList as IEnumerable<SelectListItem>, new { onchange = "submit()" })
                        </div>
                    }
                </td>
                @*<td>
                        <div id="DistrictContainer" , class="col-md-3">
                            @Html.Action("DistrictView")
                        </div>
                    </td>*@

            </tr>

        </table>
    </div>
</div>

<section class="content">

    <div>
        <div class="row">
            @*Potential*@
            <div class="col-md-2">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <span class="label label-success pull-right"> 100</span>
                        <h3 class="box-title"> Potential</h3>
                    </div>
                    <div class="box-body">
                        <h1 class="no-margins"> @Model.blV.Count(a => a.SchoolType == "Potentail")</h1>
                        @*<div class="stat-percent font-bold text-success"> <i class="fa fa-level-up"></i></div>*@
                        <small>Completed </small>
                    </div>
                </div>
            </div>
            @*Feeder*@
            <div class="col-md-2">
                <div class="box box-warning">
                    <div class="box-header with-border">
                        <span class="label label-warning pull-right">100</span>
                        <h3 class="box-title"> Feeder</h3>
                    </div>
                    <div class="box-body">
                        <h1 class="no-margins">@Model.blV.Count(a => a.SchoolType == "Feeder")</h1>
                        @*<div class="stat-percent font-bold text-warning"><i class="fa fa-level-up"></i></div>*@
                        <small> Completed</small>
                    </div>
                </div>
            </div>
            @*Next Level*@
            <div class="col-md-2">
                <div class="box box-info">
                    <div class="box-header with-border">
                        <span class="label label-info pull-right">100</span>
                        <h3 class="box-title"> Next Level</h3>
                    </div>
                    <div class="box-body">
                        <h1 class="no-margins">@Model.blV.Count(a => a.SchoolType == "Next Level")</h1>
                        @*<div class="stat-percent font-bold text-info"><i class="fa fa-level-up"></i></div>*@
                        <small> Completed</small>
                    </div>
                </div>
            </div>

            @*Enrollment*@
            <div class="col-md-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <span class="label label-primary pull-right">Total</span>
                        <h3 class="box-title"> Enrollment</h3>
                    </div>
                    <div class="box-body">

                        <div class="row">
                            <div class="col-md-4">
                                <h1 class="no-margins">@Model.blV.Sum(a => a.TotalEnrollment)</h1>
                                <div class="font-bold text-navy"><i class="fa fa-level-up"></i> <small>Total</small></div>
                            </div>
                            <div class="col-md-4">
                                <h1 class="no-margins">@Model.blV.Sum(a => a.TotalEnrollGirls)</h1>
                                <div class="font-bold text-navy"><i class="fa fa-level-up"></i> <small>Girls</small></div>
                            </div>
                            <div class="col-md-4">
                                <h1 class="no-margins">@Model.blV.Sum(a => a.TotalEnrollBoys)</h1>
                                <div class="font-bold text-navy"><i class="fa fa-level-up"></i> <small>Boys</small></div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            @*Class wise Enrollment*@
            <div class="col-lg-8">
                <div class="box box-primary">
                    <div class="box-body">
                        <div>
                            <span class="pull-right text-right">
                                <small>Baseline Enrollments of Focused Schools of BES: <strong>Balochistan</strong></small>
                                <br />

                            </span>
                            <h3 class="font-bold no-margins">
                                Class wise Girls Enrollment
                            </h3>
                            <small>Enrollment, Attendance Register, Head Count</small>
                        </div>

                        <div class="m-t-sm">

                            <div class="row">
                                <div class="col-md-12">
                                    <div>
                                        <canvas id="lineChart" height="111" chart-series="lineChartseries" style='position:initial; left:0px; top:0px;'></canvas>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="m-t-md">
                            <small class="pull-right">
                                <i class="fa fa-clock-o"> </i>
                                Update on @DateTime.Today.ToString("dd-MM-yyyy")
                            </small>
                            <small>
                                <strong>Enrollment Breakup:</strong> The value has been changed over time
                            </small>
                        </div>

                    </div>
                </div>
            </div>
            @*Girls Enrollment & Attendance*@
            <div class="col-lg-4">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <span class="label label-warning pull-right">Focused Schools</span>
                        <h5>Enrollment & Attendance</h5>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="col-xs-4">
                                <small class="stats-label">Grils Enroll</small>
                                <h4>@Model.blV.Sum(a => a.TotalEnrollGirls)</h4>
                            </div>

                            <div class="col-xs-4">
                                <small class="stats-label">Present Att. </small>
                                <h4>
                                    @Model.blV.Sum(a => a.TotalPresenceGrils)
                                    <small>@GirlsPrPercent%</small>
                                </h4>
                            </div>
                            <div class="col-xs-4">
                                <small class="stats-label">Head Count </small>
                                <h4>
                                    @Model.blV.Sum(a => a.TotalHeadcountGirls)
                                    <small>@GirlsHCPercent%</small>
                                </h4>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="col-xs-4">
                                <small class="stats-label">Boys Enroll</small>
                                <h4>@Model.blV.Sum(a => a.TotalEnrollBoys)</h4>
                            </div>

                            <div class="col-xs-4">
                                <small class="stats-label">Present Att. </small>
                                <h4>
                                    @Model.blV.Sum(a => a.TotalPresenceBoys)
                                    <small>@BoysPrPercent%</small>
                                </h4>
                            </div>
                            <div class="col-xs-4">
                                <small class="stats-label">Head Count</small>
                                <h4>
                                    @Model.blV.Sum(a => a.TotalHeadcountBoys)
                                    <small>@BoysHCPercent%</small>
                                </h4>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            @*>Enrollment Per Schools*@
            <div class="col-lg-4">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <span class="label label-success pull-right">Enrollment per School</span>
                        <h5>School Enrollment Ratio</h5>
                    </div>
                    <div class="box-body">
                        <div class="row ">
                            <div class="col-xs-4">
                                <small class="stats-label">Over all </small>
                                <h4>@OverAllPerSch</h4>
                            </div>

                            <div class="col-xs-4">
                                <small class="stats-label">Girls</small>
                                <h4>@GirlsPerSch</h4>
                            </div>
                            <div class="col-xs-4">
                                <small class="stats-label">Boys </small>
                                <h4>@BoysPerSch</h4>
                            </div>
                        </div>
                    </div>


                </div>
            </div>


        </div>

        <div class="row">
            @*Total Class Rooms & Toilets*@
            <div class="col-lg-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h5>
                            Total Class Rooms & Toilets
                            <small> Functionalities</small>
                        </h5>
                    </div>
                    <div class="box-body">
                        <div>
                            <canvas id="barChart" height="143"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            @*School Facilities*@
            <div class="col-lg-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h5>
                            School Facilities
                            <small>Availability in Total Schools @Model.blV.Count()</small>
                        </h5>
                    </div>
                    <div ibox-tools></div>
                    <div class="box-body">
                        <div>
                            <div class="row">
                                <div class="col-lg-8">
                                    <canvas id="doughnutChart" height="200"></canvas>
                                </div>
                                <div id="my-doughnut-legend" class="col-lg-4">
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-12">
                </div>

            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h5>
                            Post wise Middle Teachers
                            <small> Apointed and Attached</small>
                        </h5>
                    </div>
                    <div class="box-body">
                        <div>
                            <canvas id="barChart2" height="143"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            @*Land Availability*@
            <div class="col-lg-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h5>
                            Land Availability
                            <small> School Land Availability and Ownership</small>
                        </h5>
                    </div>
                    <div class="box-body">
                        <div>
                            <canvas id="barChartLand" height="143"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            @*PTSMC Details*@
            <div class="col-lg-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h5>
                            PTSMC Details
                            <small> from formation till training</small>
                        </h5>
                    </div>
                    <div class="box-body">
                        <div>
                            <canvas id="barChartPTSMC" height="143"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            @*Student with Furnitures*@
            <div class="col-lg-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h5>
                            Student with Furnitures
                            <small> Total Students Vs Student with Furnitures</small>
                        </h5>
                    </div>
                    <div class="box-body">
                        <div>
                            <canvas id="barChartFurni" height="143"></canvas>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        @*<div id="small-chat">

                <span class="badge badge-warning pull-right">5</span>
                <a class="open-small-chat">
                    <i class="fa fa-comments"></i>

                </a>
            </div>*@
    </div>
</section>

@section Scripts {
    <script src="~/libs/flot/jquery.flot.min.js"></script>
    <script src="~/libs/chart.js/Chart.min.js"></script>
    @*<script src="~/libs/jquery.peity/jquery.peity.min.js"></script>*@
    @* @Scripts.Render("~/plugins/peity")*@

    <script type="text/javascript">
        $(document).ready(function () {




          //Class wise Enrollment
            var lineChartseries = ["E","A","H"];
            var lineData = {
                labels: ["Kachi", "Class 1", "Class 2", "Class 3", "Class 4", "Class 5", "Class 6", "Class 7", "Class 8", "Class 9", "Class 10"],
                series: ['Series A', 'Series B'],
                datasets: [
                    {
                        label: 'Enrolled',
                        fillColor: "rgba(220,220,220,0.5)",
                        strokeColor: "rgba(220,220,220,1)",
                        pointColor: "rgba(220,220,220,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(220,220,220,1)",
                        @*data: @ViewBag.GirlsEnrollClass*@
                        data: [@Model.blV.Sum(a=>a.Enroll_Class_0),@Model.blV.Sum(a => a.Enroll_Class_1),@Model.blV.Sum(a => a.Enroll_Class_2),@Model.blV.Sum(a => a.Enroll_Class_3),@Model.blV.Sum(a => a.Enroll_Class_4),@Model.blV.Sum(a => a.Enroll_Class_5),@Model.blV.Sum(a => a.Enroll_Class_6),@Model.blV.Sum(a => a.Enroll_Class_7),@Model.blV.Sum(a => a.Enroll_Class_8),@Model.blV.Sum(a => a.Enroll_Class_9),@Model.blV.Sum(a => a.Enroll_Class_10)]
                    },
                    {
                        label: "Present",
                        fillColor: "rgba(168,214,171,0.5)",
                        strokeColor: "rgba(168,214,171,0.7)",
                        pointColor: "rgba(168,214,171,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(26,179,148,1)",
                        data: [@Model.blV.Sum(a=>a.Pres_Class_0),@Model.blV.Sum(a => a.Pres_Class_1),@Model.blV.Sum(a => a.Pres_Class_2),@Model.blV.Sum(a => a.Pres_Class_3),@Model.blV.Sum(a => a.Pres_Class_4),@Model.blV.Sum(a => a.Pres_Class_5),@Model.blV.Sum(a => a.Pres_Class_6),@Model.blV.Sum(a => a.Pres_Class_7),@Model.blV.Sum(a => a.Pres_Class_8),@Model.blV.Sum(a => a.Pres_Class_9),@Model.blV.Sum(a => a.Pres_Class_10)]
                    },
                         {
                             label: 'Head Count',
                             fillColor: "rgba(26,179,148,0.5)",
                             strokeColor: "rgba(26,179,148,0.7)",
                             pointColor: "rgba(26,179,148,1)",
                             pointStrokeColor: "#fff",
                             pointHighlightFill: "#fff",
                             pointHighlightStroke: "rgba(26,179,148,1)",
                             data: [@Model.blV.Sum(a=>a.HC_Class_0),@Model.blV.Sum(a => a.HC_Class_1),@Model.blV.Sum(a => a.HC_Class_2),@Model.blV.Sum(a => a.HC_Class_3),@Model.blV.Sum(a => a.HC_Class_4),@Model.blV.Sum(a => a.HC_Class_5),@Model.blV.Sum(a => a.HC_Class_6),@Model.blV.Sum(a => a.HC_Class_7),@Model.blV.Sum(a => a.HC_Class_8),@Model.blV.Sum(a => a.HC_Class_9),@Model.blV.Sum(a => a.HC_Class_10)]
                         }
                ]
            };

            var lineOptions = {
                // scaleBeginAtZero: true,
                //scaleOverride:true,
                //scaleSteps:14,
                //scaleStartValue:0,
                //scaleStepWidth:100,

                //scaleShowGridLines: true,
                //scaleGridLineColor: "rgba(0,0,0,.05)",
                //scaleGridLineWidth: 1,
                //barShowStroke: true,
                //barStrokeWidth: 2,
                //barValueSpacing: 5,
                //barDatasetSpacing: 1,
                //responsive: true,

                // scaleBeginAtZero: true,
                scaleShowGridLines: true,
                scaleGridLineColor: "rgba(0,0,0,.05)",
                scaleGridLineWidth: 1,
                bezierCurve: true,
                bezierCurveTension: 0.4,
                pointDot: true,
                pointDotRadius: 4,
                pointDotStrokeWidth: 1,
                pointHitDetectionRadius: 20,
                datasetStroke: true,
                datasetStrokeWidth: 2,
                datasetFill: true,
                responsive: true,
                multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
            };

            // Rooms and Toilets
            var ctx = document.getElementById("lineChart").getContext("2d");
            var myNewChart = new Chart(ctx).Line(lineData, lineOptions);

            var barData = {
                labels: ["Rooms", "Toilets",],
                datasets: [
                    {
                        label: "Functional",
                        fillColor: "rgba(220,220,220,0.5)",
                        strokeColor: "rgba(220,220,220,0.8)",
                        highlightFill: "rgba(220,220,220,0.75)",
                        highlightStroke: "rgba(220,220,220,1)",
                        data: [@Model.blV.Sum(a=>a.RoomsFunctional), @Model.blV.Sum(a=>a.ToiletsFunctional)]
                    },
                    {
                        label: "Non Functional",
                        fillColor: "rgba(26,179,148,0.5)",
                        strokeColor: "rgba(26,179,148,0.8)",
                        highlightFill: "rgba(26,179,148,0.75)",
                        highlightStroke: "rgba(26,179,148,1)",
                        data: [@Model.blV.Sum(a=>a.RoomsNonFunctional), @Model.blV.Sum(a=>a.ToiletsNonFunctional)]
                    },
                ]
            };

            var barOptions = {
                scaleBeginAtZero: true,
                scaleShowGridLines: true,
                scaleGridLineColor: "rgba(0,0,0,.05)",
                scaleGridLineWidth: 1,
                barShowStroke: true,
                barStrokeWidth: 2,
                barValueSpacing: 5,
                barDatasetSpacing: 1,
                responsive: true,
                multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
            }


            var ctx = document.getElementById("barChart").getContext("2d");
            var myNewChart = new Chart(ctx).Bar(barData, barOptions);

            var ctx = document.getElementById("lineChart").getContext("2d");
            var myNewChart = new Chart(ctx).Line(lineData, lineOptions);

            var barData2 = {
                labels: ["DM","JAT","JET","JVT","PTI","Math","SST(Gen)","SST(Sci)"],
                datasets: [
                    {
                        label: "Teachers",
                        fillColor: "rgba(6, 86, 166,0.5)",
                        strokeColor: "rgba(6, 86, 166,0.8)",
                        highlightFill: "rgba(6, 86, 166,0.75)",
                        highlightStroke: "rgba(6, 86, 166,1)",
                        @*data: @ViewBag.TotalTeachers*@
                        data: [@Model.blV.Sum(a=>a.Sanc_DM),@Model.blV.Sum(a=>a.Sanc_JAT),@Model.blV.Sum(a=>a.Sanc_JET),@Model.blV.Sum(a=>a.Sanc_JVT),@Model.blV.Sum(a=>a.Sanc_PTI),@Model.blV.Sum(a => a.Sanc_MATH),@Model.blV.Sum(a=>a.Sanc_SST_G),@Model.blV.Sum(a=>a.Sanc_SST_S)]
                    },
                    @*{
                                label: "Non Functional",
                                fillColor: "rgba(26,179,148,0.5)",
                                strokeColor: "rgba(26,179,148,0.8)",
                                highlightFill: "rgba(26,179,148,0.75)",
                                highlightStroke: "rgba(26,179,148,1)",
                                data: @ViewBag.Toilets
                            },*@
                ]
            };

            var barOptions2 = {
                scaleBeginAtZero: true,
                scaleShowGridLines: true,
                scaleGridLineColor: "rgba(0,0,0,.05)",
                scaleGridLineWidth: 1,
                barShowStroke: true,
                barStrokeWidth: 2,
                barValueSpacing: 5,
                barDatasetSpacing: 1,
                responsive: true,
                multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
            }


            var ctx = document.getElementById("barChart2").getContext("2d");
            var myNewChart = new Chart(ctx).Bar(barData2, barOptions2);

            // Land Availablity
            var barDataLand = {
                labels: ["Own Land","Comm. Donate Land","Need Add. Land", "Donate Add. Land"],
                datasets: [
                    {
                        label: "Teachers",
                        fillColor: "rgba(153, 102, 51,0.5)",
                        strokeColor: "rgba(153, 102, 51,0.8)",
                        highlightFill: "rgba(153, 102, 51,0.75)",
                        highlightStroke: "rgba(153, 102, 51,1)",
                        @*data: @ViewBag.TotalTeachers*@
                            data: [@Model.blV.Count(a=>a.PTSMCFormed=="Yes"),@Model.blV.Count(a=>a.PTSMCFunctional=="Yes"),@Model.blV.Count(a=>a.PTSMCTrained=="Yes")]
        },
                  @*{
                      label: "Non Functional",
                      fillColor: "rgba(26,179,148,0.5)",
                      strokeColor: "rgba(26,179,148,0.8)",
                      highlightFill: "rgba(26,179,148,0.75)",
                      highlightStroke: "rgba(26,179,148,1)",
                      data: @ViewBag.Toilets
                  },*@
        ]
        };

        var barOptionsLand = {
            scaleBeginAtZero: true,
            scaleShowGridLines: true,
            scaleGridLineColor: "rgba(0,0,0,.05)",
            scaleGridLineWidth: 1,
            barShowStroke: true,
            barStrokeWidth: 2,
            barValueSpacing: 5,
            barDatasetSpacing: 1,
            responsive: true,
            multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
        }


        var ctx = document.getElementById("barChartLand").getContext("2d");
        var myNewChart = new Chart(ctx).Bar(barDataLand, barOptionsLand);

            // #region PTSMC
            var barDataPTSMC = {
                labels: ["Formed","Functional","Trained"],
                datasets: [
                    {
                        label: "Teachers",
                        fillColor: "rgba(153, 51, 51,0.5)",
                        strokeColor: "rgba(153, 51, 51,0.8)",
                        highlightFill: "rgba(153, 51, 51,0.75)",
                        highlightStroke: "rgba(153, 51, 51,1)",
                        @*data: @ViewBag.TotalTeachers*@
                        data: [@Model.blV.Count(a=>a.PTSMCFormed=="Yes"),@Model.blV.Count(a=>a.PTSMCFunctional=="Yes"),@Model.blV.Count(a=>a.PTSMCTrained=="Yes")]
            },
                  @*{
                      label: "Non Functional",
                      fillColor: "rgba(26,179,148,0.5)",
                      strokeColor: "rgba(26,179,148,0.8)",
                      highlightFill: "rgba(26,179,148,0.75)",
                      highlightStroke: "rgba(26,179,148,1)",
                      data: @ViewBag.Toilets
                  },*@
            ]
            };

        var barOptionsPTSMC = {
            scaleBeginAtZero: true,
            scaleShowGridLines: true,
            scaleGridLineColor: "rgba(0,0,0,.05)",
            scaleGridLineWidth: 1,
            barShowStroke: true,
            barStrokeWidth: 2,
            barValueSpacing: 5,
            barDatasetSpacing: 1,
            responsive: true,
            multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
        }


        var ctx = document.getElementById("barChartPTSMC").getContext("2d");
        var myNewChart = new Chart(ctx).Bar(barDataPTSMC, barOptionsPTSMC);
            // #endregion PTSMC


            // Furnitures with Students
            // #region PTSMC
        var barDataFurni = {
            labels: ["Total Students","Student with Furnitures"],
            datasets: [
                {
                    label: "Teachers",
                    fillColor: "rgba(153, 0, 204,0.5)",
                    strokeColor: "rgba(153, 0, 204,0.8)",
                    highlightFill: "rgba(153, 0, 204,0.75)",
                    highlightStroke: "rgba(153, 0, 204,1)",
                    @*data: @ViewBag.TotalTeachers*@
                        data: [@Model.blV.Sum(a=>a.TotalEnrollment),@Model.blV.Sum(a=>a.StudentWithFurniture)]
        },
                  @*{
                      label: "Non Functional",
                      fillColor: "rgba(26,179,148,0.5)",
                      strokeColor: "rgba(26,179,148,0.8)",
                      highlightFill: "rgba(26,179,148,0.75)",
                      highlightStroke: "rgba(26,179,148,1)",
                      data: @ViewBag.Toilets
                  },*@
    ]
    };

    var barOptionsFurni = {
        scaleBeginAtZero: true,
        scaleShowGridLines: true,
        scaleGridLineColor: "rgba(0,0,0,.05)",
        scaleGridLineWidth: 1,
        barShowStroke: true,
        barStrokeWidth: 2,
        barValueSpacing: 5,
        barDatasetSpacing: 1,
        responsive: true,
        multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
    }


    var ctx = document.getElementById("barChartFurni").getContext("2d");
    var myNewChart = new Chart(ctx).Bar(barDataFurni, barOptionsFurni);


            // Teachers Posts

        });

        // School Facilities
        var doughnutData = [
            {  value: @Model.blV.Count(a=>a.WaterAvailable=="Yes") ,         color: "#a3e1d4", highlight: "#1ab394", label: "Water"},
            {  value: @Model.blV.Count(a=>a.BoundryWall=="Yes"),            color: "#badede", highlight: "#1ab394", label: "Boundry wall" },
            {  value: @Model.blV.Count(a=>a.Gas=="Yes"),           color: "#b5b8cf", highlight: "#1ab394", label: "Gas" },
            {  value: @Model.blV.Count(a=>a.Telephone=="Yes"),     color: "#c3f2d4", highlight: "#1ab394", label: "Telephone"},
            {  value: @Model.blV.Count(a=>a.Electricity=="Yes"),   color: "#d1dede", highlight: "#1ab394", label: "Electricity" },
            @*{  value: @ViewBag.Space_for_Extension,     color: "#1ed3de", highlight: "#1ab394", label: "Spaceb for Extension" },*@
            {  value: @Model.blV.Count(a=>a.SportsEquipment=="Yes"),       color: "#ded3de", highlight: "#1ab394", label: "Sports Equipments" },
            {  value: @Model.blV.Count(a=>a.Library=="Yes"),                 color: "#b5b84f", highlight: "#1ab394", label: "Library" },
            {  value: @Model.blV.Count(a=>a.ITRoom=="Yes"),                 color: "#b5b8c5", highlight: "#1ab394", label: "IT_Room" },
            {  value:@Model.blV.Count(a=>a.ResourceHall=="Yes"),           color: "#dede6e", highlight: "#1ab394", label: "Resource Hall" },
            {  value: @Model.blV.Count(a=>a.ECERooms=="Yes"),               color: "#b578cf", highlight: "#1ab394", label: "ECE Rooms" },
    ];

    var doughnutOptions = {
        segmentShowStroke: true,
        segmentStrokeColor: "#fff",
        segmentStrokeWidth: 2,
        percentageInnerCutout: 45, // This is 0 for Pie charts
        animationSteps: 100,
        animationEasing: "easeOutBounce",
        animateRotate: true,
        animateScale: false,
        responsive: true,
        legend: true,
        legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><div class=\"comm-how\"><%=segments[i].value%>%</div><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
    };


    //var ctx = document.getElementById("doughnutChart").getContext("2d");
    //var myDoughnut = new Chart(ctx).Doughnut(doughnutData, doughnutOptions);

    //var legendHolder = document.createElement('div');
    //legendHolder.innerHTML = race.generateLegend();
    window.onload = function(){
        var ctx = document.getElementById("doughnutChart").getContext("2d");
        window.myDoughnut = new Chart(ctx).Doughnut(doughnutData, {
            responsive : true,
            animationEasing: "easeOutQuart",
            tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>",
            segmentStrokeColor : "#f9f9f9",
            legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><div class=\"comm-how\"><%=segments[i].value%>:</div><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
        });
        var legendHolder = document.getElementById('my-doughnut-legend')
        legendHolder.innerHTML = myDoughnut.generateLegend();
        // Include a html legend template after the module doughnut itself
        //helpers.each(legendHolder.firstChild.childNodes, function(legendNode, index){
        //    helpers.addEvent(legendNode, 'mouseover', function(){
        //        var activeSegment = myDoughnut.segments[index];
        //        activeSegment.save();
        //        activeSegment.fillColor = activeSegment.highlightColor;
        //        myDoughnut.showTooltip([activeSegment]);
        //        activeSegment.restore();
        //    });
        //});
        //helpers.addEvent(legendHolder.firstChild, 'mouseout', function(){
        //    myDoughnut.draw();
        //});
        //canvas.parentNode.parentNode.appendChild(legendHolder.firstChild);


        //myDoughnut.generateLegend();
        //document.getElementById('my-doughnut-legend').innerHTML = myDoughnut.generateLegend();
    };
    </script>
}

<style type="text/css">
    #canvas-holder {
        width: 240px;
    }

    .doughnut-legend li span {
        display: block;
        width: 14px;
        height: 14px;
        border-radius: 7px;
        float: left;
        margin-top: 4px;
        margin-right: 8px;
    }

    .doughnut-legend {
        list-style: none;
        margin: 0;
        padding: 0;
        font-size: 10px;
        margin-top: 0px;
    }

        .doughnut-legend li {
            margin-bottom: 4px;
        }

            .doughnut-legend li:first-letter {
                text-transform: capitalize;
            }

    .comm-how {
        display: inline-block;
        float: left;
        color: #979797;
        width: 25px;
        text-align: right;
        margin-right: 10px;
    }
</style>
